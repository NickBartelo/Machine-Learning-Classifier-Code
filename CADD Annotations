CADD annotations were performed uisng the online annotation source whose link is below:
https://cadd.gs.washington.edu/score

Specifications for CADD file input:
1. File must be in VCF format
2. File must be under 2 MB 
3. File must have less than 100,000 variants

To meet these specifications, split the human derived benign variants dataframe into 11 separate frames, the first 10 containing 90,000 variants each, and the last containing the remaining.
All other dataframes used are already under 100,000 variants. 
To meet the file size specification, I also cut the columns 'QUAL', 'FILTER', and 'INFO' from the dataframe in Jupyter Notebook using the following code:
clinvar_benign_coding_for_cadd = clinvar_benign_coding.drop(columns = ['QUAL', 'FILTER', 'INFO'])

Then it is necessary to export the file using the header format and as a VCF using the following code:

header = """##fileformat=VCFv4.1
##fileDate=20090805
##source=myImputationProgramV3.1
##reference=file:///seq/references/
#CHROM POS ID REF ALT QUAL FILTER INFO
"""
output_VCF = "clinvar_benign_coding_for_cadd.vcf"
with open(output_VCF, 'w') as vcf:
    vcf.write(header)
clinvar_benign_coding_for_cadd.to_csv(output_VCF, sep="\t", mode='a', index=False)

Next, open the file in a text editor and cut out all lines with ## in front of them leaving the column names and the data.

To run CADD annotations:
1. Download the VCF file created above from Jupyter Notebook
2. Go to the website
3. Click choose file and select the clinvar_benign_coding_for_cadd.vcf
4. Change the box to the right to GRCh38-v1.5
5. Click INCLUDE ANNOTATIONS
6. Click UPLOAD VARIANTS

The files should not take longer than 5 hours to complete. You can run multiple files at a time. For example, I ran all 11 noncoding benign variant VCF files at once.
To get the completely annotated files, there will be a word you need to click within the writing and the download will start right for the annotated file.
The same process will work with all files. For the Human Derived SNVs, it is not necessary to cut any of the columns since it already has 5.

After the annotations are complete, unzip the tsv.gz file (for Windows, right click on the file and click 7-zip then click Extract here).
Open the unzipped file in a text editor and cut out the top lines until the data. Save this file as a .tsv file. Upload this file into Jupyter Notebook.

To import the file for manipulation in Jupyter Notebook, use the following code to create a dataframe for the code:
clivnar_benign_coding_annotated_with_cadd = pd.read_table('clinvar_coding_benign_cadd_annotations_noheader.tsv')
clivnar_benign_coding_annotated_with_cadd
This gives a dataframe with the annotated variants.

For annotations of large files not on the CADD website, use the following code:

For Human Derived SNVs VCFs:
../../../tools/CADD-scripts/CADD.sh -a -g GRCh38 -o human_drive_cadd_output_inclAnno_GRCh38.tsv.gz ../../variantMapToSorfs/humanDrivedSnvCadd/human_drive_mapped_to_norfs.vcf

For HGMD VCFs: 
../../../tools/CADD-scripts/CADD.sh -a -g GRCh38 -o hgmd_cadd_output_inclAnno_GRCh38.tsv.gz ../../variantMapToSorfs/hgmd/hgmd_mapped_to_norfs.vcf

For ClinVar VCFs:
../../../tools/CADD-scripts/CADD.sh -a -g GRCh38 -o clinvar_cadd_output_inclAnno_GRCh38.tsv.gz ../../variantMapToSorfs/clinvar/clinvar_mapped_to_norfs.vcf

The outputs for CADD annotations may contain multiple outputs for a single variant. 
The reason for this is because CADD uses an Ensemble VEP for annotation and this creates multiple outputs based on predictions of the function of the variant.
We will discuss this further and how it impacts our model.

Next, we must run the following code to cut out the columns that are unneccessary for our analysis from all CADD annotated dataframes:
An example for clinvar pathogenic noncoding variants is shown:
clinvar_pathogenic_noncoding_annotated_with_cadd.drop(columns = ['FeatureID', 'PolyPhenVal', 'priPhCons', 'cHmm_E1', 'cHmm_E2', 'cHmm_E3', 'cHmm_E4', 'cHmm_E5', 'cHmm_E6', 'cHmm_E7', 'cHmm_E8', 'cHmm_E9', 'cHmm_E10', 'cHmm_E11', 'cHmm_E12', 'cHmm_E13', 'cHmm_E14', 'cHmm_E15', 'cHmm_E16', 'cHmm_E17', 'cHmm_E18', 'cHmm_E19', 'cHmm_E20', 'cHmm_E21', 'cHmm_E22', 'cHmm_E23', 'cHmm_E24', 'cHmm_E25', 'GerpN', 'GerpS'])
